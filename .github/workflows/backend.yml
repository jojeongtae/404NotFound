name: Build and Push Docker Images

on:
  push:
    branches:
      - backend

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # 1. DockerHub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 2. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 3. MySQL Docker 이미지 빌드 및 푸시
      - name: Build MySQL Docker image
        working-directory: db
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/notfounddb:latest .

      - name: Push MySQL Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notfounddb:latest

      # 4. Backend Docker 이미지 빌드 및 푸시
      - name: Build Backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/notfoundbackend:latest .

      - name: Push Backend Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notfoundbackend:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.LIVE_SERVER_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "===== Remove old containers ====="
            sudo docker rm -f notfounddb || true
            sudo docker rm -f notfoundbackend || true

            echo "===== Remove old DB volume (full reset) ====="
            sudo docker volume rm notfounddb_volume || true

            echo "===== Remove old images ====="
            sudo docker rmi -f ${{ secrets.DOCKERHUB_USERNAME }}/notfounddb:latest || true
            sudo docker rmi -f ${{ secrets.DOCKERHUB_USERNAME }}/notfoundbackend:latest || true

            echo "===== Pull new images ====="
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/notfounddb:latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/notfoundbackend:latest

            echo "===== Run new MySQL container ====="
            sudo docker run -d \
              --name notfounddb \
              -p 3306:3306 \
              -v notfounddb_volume:/var/lib/mysql \
              ${{ secrets.DOCKERHUB_USERNAME }}/notfounddb:latest

            echo "===== Run new Backend container ====="
            sudo docker run -d \
              --name notfoundbackend \
              -p 8080:8080 \
              -e NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }} \
              -e NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }} \
              -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              -e KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/notfoundbackend:latest
